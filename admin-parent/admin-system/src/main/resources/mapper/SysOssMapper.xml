<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xiaodao.system.mapper.SysOssMapper">
    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.xiaodao.feign.system.entity.SysOss" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="fileName" column="file_name"/>
        <result property="fileSuffix" column="file_suffix"/>
        <result property="url" column="url"/>
        <result property="createTime" column="create_time"/>
        <result property="createBy" column="create_by"/>
        <result property="service" column="service"/>
    </resultMap>

    <!--数据库表的基本查询列名集合 -->
    <sql id="Base_Column_List">
        id,
        file_name,
        file_suffix,
        url,
        create_time,
        create_by,
        service
    </sql>


    <!--基本插入字段-->
    <sql id="Base_Insert_Column">
    <trim prefix="(" suffix=")" suffixOverrides=",">
        id,
        file_name,
        file_suffix,
        url,
        create_time,
        create_by,
        service
    </trim>
    </sql>

    <!--基本插入值-->
    <sql id="Base_Insert_Value">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{sysOss.id,jdbcType=BIGINT},
            #{sysOss.fileName,jdbcType=VARCHAR},
            #{sysOss.fileSuffix,jdbcType=VARCHAR},
            #{sysOss.url,jdbcType=VARCHAR},
            #{sysOss.createTime,jdbcType=TIMESTAMP},
            #{sysOss.createBy,jdbcType=VARCHAR},
            #{sysOss.service,jdbcType=BIGINT}
    </trim>
    </sql>
    <!--基本选择插入字段-->
    <sql id="Base_Insert_Selective_Column">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sysOss.id != null">
                 id,
            </if>
            <if test="sysOss.fileName != null">
                 file_name,
            </if>
            <if test="sysOss.fileSuffix != null">
                 file_suffix,
            </if>
            <if test="sysOss.url != null">
                 url,
            </if>
            <if test="sysOss.createTime != null">
                 create_time,
            </if>
            <if test="sysOss.createBy != null">
                 create_by,
            </if>
            <if test="sysOss.service != null">
                 service
            </if>
        </trim>
    </sql>

    <!--基本选择插入值-->
    <sql id="Base_Insert_Selective_Value">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sysOss.id != null">
                #{sysOss.id,jdbcType=BIGINT},
            </if>
            <if test="sysOss.fileName != null">
                #{sysOss.fileName,jdbcType=VARCHAR},
            </if>
            <if test="sysOss.fileSuffix != null">
                #{sysOss.fileSuffix,jdbcType=VARCHAR},
            </if>
            <if test="sysOss.url != null">
                #{sysOss.url,jdbcType=VARCHAR},
            </if>
            <if test="sysOss.createTime != null">
                #{sysOss.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sysOss.createBy != null">
                #{sysOss.createBy,jdbcType=VARCHAR},
            </if>
            <if test="sysOss.service != null">
                #{sysOss.service,jdbcType=BIGINT}
            </if>
        </trim>
    </sql>

    <!--基本更新-->
    <sql id="Base_Update">
        <set>
            id = #{sysOss.id,jdbcType=BIGINT},
            file_name = #{sysOss.fileName,jdbcType=VARCHAR},
            file_suffix = #{sysOss.fileSuffix,jdbcType=VARCHAR},
            url = #{sysOss.url,jdbcType=VARCHAR},
            create_time = #{sysOss.createTime,jdbcType=TIMESTAMP},
            create_by = #{sysOss.createBy,jdbcType=VARCHAR},
            service = #{sysOss.service,jdbcType=BIGINT}
        </set>
    </sql>
    <!--带有空值检查的基本更新-->
    <sql id="Base_Update_Selective">
        <set>
            <if test="sysOss.id != null">
                id = #{sysOss.id,jdbcType=BIGINT},
            </if>
            <if test="sysOss.fileName != null">
                file_name = #{sysOss.fileName,jdbcType=VARCHAR},
            </if>
            <if test="sysOss.fileSuffix != null">
                file_suffix = #{sysOss.fileSuffix,jdbcType=VARCHAR},
            </if>
            <if test="sysOss.url != null">
                url = #{sysOss.url,jdbcType=VARCHAR},
            </if>
            <if test="sysOss.createTime != null">
                create_time = #{sysOss.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sysOss.createBy != null">
                create_by = #{sysOss.createBy,jdbcType=VARCHAR},
            </if>
            <if test="sysOss.service != null">
                service = #{sysOss.service,jdbcType=BIGINT}
            </if>
        </set>
    </sql>


    <!--Where子句 -->
    <sql id="Base_Query_Where">
        <if test="sysOss.id != null">
            and id = #{sysOss.id,jdbcType=BIGINT}
        </if>
        <if test="sysOss.fileName != null">
            and file_name = #{sysOss.fileName,jdbcType=VARCHAR}
        </if>
        <if test="sysOss.fileSuffix != null">
            and file_suffix = #{sysOss.fileSuffix,jdbcType=VARCHAR}
        </if>
        <if test="sysOss.url != null">
            and url = #{sysOss.url,jdbcType=VARCHAR}
        </if>
        <if test="sysOss.createTime != null">
            and create_time = #{sysOss.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="sysOss.createBy != null">
            and create_by = #{sysOss.createBy,jdbcType=VARCHAR}
        </if>
        <if test="sysOss.service != null">
            and service = #{sysOss.service,jdbcType=BIGINT}
        </if>
    </sql>

    <!--模糊查询条件 -->
    <sql id="Base_Query_Like_Where">
        <if test="sysOss.id != null">
            and id like concat('%',concat(#{sysOss.id},'%'))
        </if>
        <if test="sysOss.fileName != null">
            and file_name like concat('%',concat(#{sysOss.fileName},'%'))
        </if>
        <if test="sysOss.fileSuffix != null">
            and file_suffix like concat('%',concat(#{sysOss.fileSuffix},'%'))
        </if>
        <if test="sysOss.url != null">
            and url like concat('%',concat(#{sysOss.url},'%'))
        </if>
        <if test="sysOss.createTime != null">
            and create_time like concat('%',concat(#{sysOss.createTime},'%'))
        </if>
        <if test="sysOss.createBy != null">
            and create_by like concat('%',concat(#{sysOss.createBy},'%'))
        </if>
        <if test="sysOss.service != null">
            and service like concat('%',concat(#{sysOss.service},'%'))
        </if>
    </sql>

    <!--模糊查询 -->
    <sql id="Base_Query_Fuzzy_Where">
        or id like concat('%',concat(#{sysOss.searchValue},'%'))
        or file_name like concat('%',concat(#{sysOss.searchValue},'%'))
        or file_suffix like concat('%',concat(#{sysOss.searchValue},'%'))
        or url like concat('%',concat(#{sysOss.searchValue},'%'))
        or create_time like concat('%',concat(#{sysOss.searchValue},'%'))
        or create_by like concat('%',concat(#{sysOss.searchValue},'%'))
        or service like concat('%',concat(#{sysOss.searchValue},'%'))
    </sql>


    <sql id="Order_By">
        order by
        <if test="sysOss.orderBy != null and sysOss.orderBy != ''">
            #{sysOss.orderBy}
        </if>
        <if test="sysOss.orderBy == null or sysOss.orderBy==''">
            #{sysOss.id}
        </if>
        <if test="baseService.isAsc  == 1">
            DESC
        </if>
    </sql>

    <sql id="Time_Limit">
        <if test="sysOss.beginTime != null">
            and DATE_FORMAT(#{sysOss.createTime},'%Y-%m-%d %H:%i:%S') &gt;= DATE_FORMAT(#{create_time},'%Y-%m-%d %H:%i:%S')
        </if>
        <if test="sysOss.endTime != null">
            and DATE_FORMAT(#{sysOss.createTime},'%Y-%m-%d %H:%i:%S') &lt;= DATE_FORMAT(#{create_time},'%Y-%m-%d %H:%i:%S')
        </if>
    </sql>

    <!--插入更新-->
    <sql id="On_Duplicate_Column_Update">
        <trim suffixOverrides=",">
            id = #{sysOss.id,jdbcType=BIGINT},
            file_name = #{sysOss.fileName,jdbcType=VARCHAR},
            file_suffix = #{sysOss.fileSuffix,jdbcType=VARCHAR},
            url = #{sysOss.url,jdbcType=VARCHAR},
            create_time = #{sysOss.createTime,jdbcType=TIMESTAMP},
            create_by = #{sysOss.createBy,jdbcType=VARCHAR},
            service = #{sysOss.service,jdbcType=BIGINT}
         </trim>
    </sql>

    <!--带有空值检查的插入更新-->
    <sql id="On_Duplicate_Column_Selective_Update">
        <trim suffixOverrides=",">
            <if test="sysOss.id != null">
                id = #{sysOss.id,jdbcType=BIGINT},
            </if>
            <if test="sysOss.fileName != null">
                file_name = #{sysOss.fileName,jdbcType=VARCHAR},
            </if>
            <if test="sysOss.fileSuffix != null">
                file_suffix = #{sysOss.fileSuffix,jdbcType=VARCHAR},
            </if>
            <if test="sysOss.url != null">
                url = #{sysOss.url,jdbcType=VARCHAR},
            </if>
            <if test="sysOss.createTime != null">
                create_time = #{sysOss.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sysOss.createBy != null">
                create_by = #{sysOss.createBy,jdbcType=VARCHAR},
            </if>
            <if test="sysOss.service != null">
                service = #{sysOss.service,jdbcType=BIGINT}
            </if>
        </trim>
    </sql>

    <!--批量插入更新-->
    <sql id="Batch_On_Duplicate_Column_Update">
        <trim suffixOverrides=",">
            id = values(id),
            file_name = values(file_name),
            file_suffix = values(file_suffix),
            url = values(url),
            create_time = values(create_time),
            create_by = values(create_by),
            service = values(service),
        </trim>
    </sql>

    <!--带有控制判断的批量插入更新-->
    <sql id="Batch_On_Duplicate_Column_Update_Selective">
        <trim suffixOverrides=",">
            <if test="sysOss.id != null">
                id = #{item.id,jdbcType=BIGINT},
            </if>
            <if test="sysOss.fileName != null">
                file_name = #{item.fileName,jdbcType=VARCHAR},
            </if>
            <if test="sysOss.fileSuffix != null">
                file_suffix = #{item.fileSuffix,jdbcType=VARCHAR},
            </if>
            <if test="sysOss.url != null">
                url = #{item.url,jdbcType=VARCHAR},
            </if>
            <if test="sysOss.createTime != null">
                create_time = #{item.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sysOss.createBy != null">
                create_by = #{item.createBy,jdbcType=VARCHAR},
            </if>
            <if test="sysOss.service != null">
                service = #{item.service,jdbcType=BIGINT}
            </if>
        </trim>
    </sql>

    <!--批量插入，更新插入值-->
    <sql id="Batch_Operating_Value">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{item.id,jdbcType=BIGINT},
            #{item.fileName,jdbcType=VARCHAR},
            #{item.fileSuffix,jdbcType=VARCHAR},
            #{item.url,jdbcType=VARCHAR},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.createBy,jdbcType=VARCHAR},
            #{item.service,jdbcType=BIGINT}
        </trim>
    </sql>

    <!--批量更新-->
    <sql id="Batch_Update">
        <set>
            id = #{item.id,jdbcType=BIGINT},
            file_name = #{item.fileName,jdbcType=VARCHAR},
            file_suffix = #{item.fileSuffix,jdbcType=VARCHAR},
            url = #{item.url,jdbcType=VARCHAR},
            create_time = #{item.createTime,jdbcType=TIMESTAMP},
            create_by = #{item.createBy,jdbcType=VARCHAR},
            service = #{item.service,jdbcType=BIGINT}
        </set>
    </sql>

    <!--带有空值检查的批量更新-->
    <sql id="Batch_Update_selective">
        <set>
            <if test="item.id != null">
                id = #{item.id,jdbcType=BIGINT},
            </if>
            <if test="item.fileName != null">
                file_name = #{item.fileName,jdbcType=VARCHAR},
            </if>
            <if test="item.fileSuffix != null">
                file_suffix = #{item.fileSuffix,jdbcType=VARCHAR},
            </if>
            <if test="item.url != null">
                url = #{item.url,jdbcType=VARCHAR},
            </if>
            <if test="item.createTime != null">
                create_time = #{item.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="item.createBy != null">
                create_by = #{item.createBy,jdbcType=VARCHAR},
            </if>
            <if test="item.service != null">
                service = #{item.service,jdbcType=BIGINT}
            </if>
        </set>
    </sql>

    <!--带有空值检查的批量操作字段-->
    <sql id="Batch_Operating_Selective_Column">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="item.id != null">
                id ,
            </if>
            <if test="item.fileName != null">
                file_name ,
            </if>
            <if test="item.fileSuffix != null">
                file_suffix ,
            </if>
            <if test="item.url != null">
                url ,
            </if>
            <if test="item.createTime != null">
                create_time ,
            </if>
            <if test="item.createBy != null">
                create_by ,
            </if>
            <if test="item.service != null">
                service 
            </if>
        </trim>
    </sql>

    <!--带有空值检查的批量操作值-->
    <sql id="Batch_Operating_Selective_Value">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="item.id != null">
                #{item.id,jdbcType=BIGINT},
            </if>
            <if test="item.fileName != null">
                #{item.fileName,jdbcType=VARCHAR},
            </if>
            <if test="item.fileSuffix != null">
                #{item.fileSuffix,jdbcType=VARCHAR},
            </if>
            <if test="item.url != null">
                #{item.url,jdbcType=VARCHAR},
            </if>
            <if test="item.createTime != null">
                #{item.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="item.createBy != null">
                #{item.createBy,jdbcType=VARCHAR},
            </if>
            <if test="item.service != null">
                #{item.service,jdbcType=BIGINT}
            </if>
        </trim>
    </sql>

    <!--插入-->
    <insert id="insert" parameterType="com.xiaodao.feign.system.entity.SysOss">
        insert into sys_oss
        <include refid="Base_Insert_Column"/>
        values
        <include refid="Base_Insert_Value"/>
    </insert>

    <!--带有空值检查的插入-->
    <insert id="insertSelective" parameterType="com.xiaodao.feign.system.entity.SysOss">
        insert into sys_oss
        <include refid="Base_Insert_Selective_Column"/>
        values
        <include refid="Base_Insert_Selective_Value"/>
    </insert>

    <!--更新-->
    <update id="updateByPrimaryKey" parameterType="com.xiaodao.feign.system.entity.SysOss">
        update sys_oss
        <include refid="Base_Update"/>
        <where>
            id = #{sysOss.id,jdbcType=BIGINT}
        </where>
    </update>

    <!--带有空值检查的更新-->
    <update id="updateSelectiveByPrimaryKey" parameterType="com.xiaodao.feign.system.entity.SysOss">
        update sys_oss
        <include refid="Base_Update_Selective"/>
        <where>
            id = #{sysOss.id,jdbcType=BIGINT}
         </where>
    </update>


    <!--更新插入-->
    <insert id="upsert" parameterType="com.xiaodao.feign.system.entity.SysOss">
        insert into sys_oss
        <include refid="Base_Insert_Column"/>
        values
        <include refid="Base_Insert_Value"/>
        on duplicate Column update
        <include refid="On_Duplicate_Column_Update"/>
    </insert>


    <!--带有控制判断的更新插入-->
    <insert id="upsertSelective" parameterType="com.xiaodao.feign.system.entity.SysOss">
        insert into sys_oss
        <include refid="Base_Insert_Selective_Column"/>
        values
        <include refid="Base_Insert_Selective_Value"/>
        on duplicate Column update
        <include refid="On_Duplicate_Column_Selective_Update"/>
    </insert>


    <!--批量插入-->
    <insert id="batchInsert" parameterType="java.util.List">
        insert into sys_oss
        <include refid="Base_Insert_Column"/>
        values
        <foreach collection="list" index="index" item="item" separator=",">
            <include refid="Batch_Operating_Value"/>
        </foreach>
    </insert>


    <!-- 批量更新-->
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            update sys_oss
            <include refid="Batch_Update"/>
            <where>
                <trim suffixOverrides=",">
                    id = #{item.id,jdbcType=BIGINT}
                </trim>
            </where>
        </foreach>
    </update>


    <!-- 批量更新插入-->
    <update id="batchUpsert" parameterType="java.util.List">
        insert into sys_oss
        <include refid="Base_Insert_Column"/>
        values
        <include refid="Batch_Operating_Value"/>
        on duplicate Column update
        <include refid="Batch_On_Duplicate_Column_Update"/>
    </update>


    <!-- 带有控制判断的批量更新-->
    <update id="batchUpdateSelective" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            update sys_oss
            <include refid="Batch_Update_selective"/>
            <where>
                <trim suffixOverrides=",">
                    id = #{item.id,jdbcType=BIGINT}
                </trim>
            </where>
        </foreach>
    </update>


    <!-- 带有空值判断的批量插入-->
    <insert id="batchInsertSelective" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            insert into sys_oss
            <include refid="Batch_Operating_Selective_Column"/>
            values
            <include refid="Batch_Operating_Selective_Value"/>
        </foreach>
    </insert>

    <!-- 带有空值判断的批量更新插入-->
    <update id="batchUpsertSelective" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            insert into sys_oss
            <include refid="Batch_Operating_Selective_Column"/>
            values
            <include refid="Batch_Operating_Selective_Value"/>
            on duplicate Column update
            <include refid="Batch_On_Duplicate_Column_Update_Selective"/>
        </foreach>
    </update>


    <!--通过主键批量查询-->
    <select id="queryBatchPrimaryKeys" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from sys_oss
        <where>
            id in
            <foreach collection="list" item="item" open="(" separator="," close=")">
                #{item }
            </foreach>
            <include refid="Order_By"></include>
            <include refid="Time_Limit"></include>
        </where>
    </select>

    <!--通过主键批量查询-->
    <select id="queryByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from sys_oss
        <where>
            id = #{id,jdbcType=BIGINT}
        </where>
    </select>

    <!--条件查询-->
    <select id="queryByCondition" resultMap="BaseResultMap" parameterType="com.xiaodao.feign.system.entity.SysOss">
        select
        <include refid="Base_Column_List"/>
        from sys_oss
        <where>
            <include refid="Base_Query_Where"/>
            <include refid="Time_Limit"></include>
        </where>
        <include refid="Order_By"></include>
    </select>

    <!--查询一个-->
    <select id="queryOne" resultMap="BaseResultMap" parameterType="com.xiaodao.feign.system.entity.SysOss">
        select
        <include refid="Base_Column_List"/>
        from sys_oss
        <where>
            <include refid="Base_Query_Where"/>
            <include refid="Time_Limit"></include>
        </where>
        <include refid="Order_By"></include>
        limit 1
    </select>


    <!--条件模糊查询-->
    <select id="queryByLikeCondition" resultMap="BaseResultMap" parameterType="com.xiaodao.feign.system.entity.SysOss">
        select
        <include refid="Base_Column_List"/>
        from sys_oss
        <where>
            <include refid="Base_Query_Like_Where"/>
            <include refid="Time_Limit"></include>
        </where>
        <include refid="Order_By"></include>
        <include refid="Time_Limit"></include>
    </select>


    <!--模糊查询-->
    <select id="queryFuzzy" resultMap="BaseResultMap" parameterType="com.xiaodao.feign.system.entity.SysOss">
        select
        <include refid="Base_Column_List"/>
        from sys_oss
        <where>
            <include refid="Base_Query_Like_Where"/>
            <include refid="Time_Limit"></include>
        </where>
        <include refid="Order_By"></include>
    </select>

    <!--条件查询数量-->
    <select id="queryCount" resultType="int" parameterType="com.xiaodao.feign.system.entity.SysOss">
        select count(*) from sys_oss
        <where>
            <include refid="Base_Query_Where"/>
            <include refid="Time_Limit"></include>
        </where>
    </select>

    <!--条件删除-->
    <delete id="delete" parameterType="com.xiaodao.feign.system.entity.SysOss">
        delete from sys_oss
        <where>
            <include refid="Base_Query_Where"/>
            <include refid="Time_Limit"></include>
        </where>
    </delete>

    <!--通过主键删除-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from sys_oss
        <where>
            <trim suffixOverrides=",">
                id = #{id,jdbcType=BIGINT}
            </trim>
            <include refid="Time_Limit"></include>
        </where>
    </delete>

    <!--通过主键批量删除-->
    <delete id="deleteBatchByPrimaryKeys" parameterType="java.lang.Long">
        delete from sys_oss
        <where>
            id in
            <foreach collection="list" item="item" open="(" separator="," close=")">
                #{item }
            </foreach>
        </where>
    </delete>

    <!--分组统计-->
    <select id="statisticsGroup" resultType="java.util.Map" parameterType="com.xiaodao.feign.system.entity.SysOss">
        select ${sysOss.statisticalProperty} as name,${sysOss.statisticalMethod}(${sysOss.statisticalProperty}) as value from sys_oss
        <where>
            <include refid="Base_Query_Where"/>
            <include refid="Time_Limit"></include>
        </where>
         group by ${sysOss.statisticalProperty}
    </select>

    <!--按日统计-->
    <select id="statisticsGroupByDay" resultType="java.util.Map" parameterType="com.xiaodao.feign.system.entity.SysOss">
        select date_format(create_time, '%Y-%m-%d') as name,${sysOss.statisticalMethod}(${sysOss.statisticalProperty}) as value from sys_oss
        <where>
            <include refid="Base_Query_Where"/>
            <include refid="Time_Limit"></include>
        </where>
        group by date_format(create_time,'%Y-%m-%d')
    </select>

    <!--按月统计-->
    <select id="statisticsGroupByMonth" resultType="java.util.Map" parameterType="com.xiaodao.feign.system.entity.SysOss">
        select date_format(create_time, '%Y-%m') as name, ${sysOss.statisticalMethod}(${sysOss.statisticalProperty}) as value from sys_oss
        <where>
            <include refid="Base_Query_Where"/>
            <include refid="Time_Limit"/>
        </where>
            group by date_format(create_time,'%Y-%m')
    </select>

    <!--按年统计-->
    <select id="statisticsGroupByYear" resultType="java.util.Map" parameterType="com.xiaodao.feign.system.entity.SysOss">
        select date_format(create_time, '%Y') as name,${sysOss.statisticalMethod}(${sysOss.statisticalProperty}) as value from sys_oss
        <where>
            <include refid="Base_Query_Where"/>
            <include refid="Time_Limit"/>
         </where>
            group by date_format(create_time,'%Y')
    </select>

</mapper>