<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xiaodao.system.mapper.SysRoleDeptMapper">
    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.xiaodao.feign.system.entity.SysRoleDept" id="BaseResultMap">
        <result property="roleId" column="role_id"/>
        <result property="deptId" column="dept_id"/>
    </resultMap>

    <!--数据库表的基本查询列名集合 -->
    <sql id="Base_Column_List">
        role_id,
        dept_id
    </sql>


    <!--基本插入字段-->
    <sql id="Base_Insert_Column">
    <trim prefix="(" suffix=")" suffixOverrides=",">
        role_id,
        dept_id
    </trim>
    </sql>

    <!--基本插入值-->
    <sql id="Base_Insert_Value">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{sysRoleDept.roleId,jdbcType=BIGINT},
            #{sysRoleDept.deptId,jdbcType=BIGINT}
    </trim>
    </sql>
    <!--基本选择插入字段-->
    <sql id="Base_Insert_Selective_Column">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sysRoleDept.roleId != null">
                 role_id,
            </if>
            <if test="sysRoleDept.deptId != null">
                 dept_id
            </if>
        </trim>
    </sql>

    <!--基本选择插入值-->
    <sql id="Base_Insert_Selective_Value">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sysRoleDept.roleId != null">
                #{sysRoleDept.roleId,jdbcType=BIGINT},
            </if>
            <if test="sysRoleDept.deptId != null">
                #{sysRoleDept.deptId,jdbcType=BIGINT}
            </if>
        </trim>
    </sql>

    <!--基本更新-->
    <sql id="Base_Update">
        <set>
            role_id = #{sysRoleDept.roleId,jdbcType=BIGINT},
            dept_id = #{sysRoleDept.deptId,jdbcType=BIGINT}
        </set>
    </sql>
    <!--带有空值检查的基本更新-->
    <sql id="Base_Update_Selective">
        <set>
            <if test="sysRoleDept.roleId != null">
                role_id = #{sysRoleDept.roleId,jdbcType=BIGINT},
            </if>
            <if test="sysRoleDept.deptId != null">
                dept_id = #{sysRoleDept.deptId,jdbcType=BIGINT}
            </if>
        </set>
    </sql>


    <!--Where子句 -->
    <sql id="Base_Query_Where">
        <if test="sysRoleDept.roleId != null">
            and role_id = #{sysRoleDept.roleId,jdbcType=BIGINT}
        </if>
        <if test="sysRoleDept.deptId != null">
            and dept_id = #{sysRoleDept.deptId,jdbcType=BIGINT}
        </if>
    </sql>

    <!--模糊查询条件 -->
    <sql id="Base_Query_Like_Where">
        <if test="sysRoleDept.roleId != null">
            and role_id like concat('%',concat(#{sysRoleDept.roleId},'%'))
        </if>
        <if test="sysRoleDept.deptId != null">
            and dept_id like concat('%',concat(#{sysRoleDept.deptId},'%'))
        </if>
    </sql>

    <!--模糊查询 -->
    <sql id="Base_Query_Fuzzy_Where">
        or role_id like concat('%',concat(#{sysRoleDept.searchValue},'%'))
        or dept_id like concat('%',concat(#{sysRoleDept.searchValue},'%'))
    </sql>


    <sql id="Order_By">
        order by
        <if test="sysRoleDept.orderBy != null and sysRoleDept.orderBy != ''">
            #{sysRoleDept.orderBy}
        </if>
        <if test="sysRoleDept.orderBy == null or sysRoleDept.orderBy==''">
            #{sysRoleDept.roleId}
        </if>
        <if test="sysRoleDept.isAsc  == 1">
            DESC
        </if>
    </sql>

    <sql id="Time_Limit">
        <if test="sysRoleDept.beginTime != null">
            and DATE_FORMAT(#{sysRoleDept.createTime},'%Y-%m-%d %H:%i:%S') &gt;= DATE_FORMAT(#{create_time},'%Y-%m-%d %H:%i:%S')
        </if>
        <if test="sysRoleDept.endTime != null">
            and DATE_FORMAT(#{sysRoleDept.createTime},'%Y-%m-%d %H:%i:%S') &lt;= DATE_FORMAT(#{create_time},'%Y-%m-%d %H:%i:%S')
        </if>
    </sql>

    <!--插入更新-->
    <sql id="On_Duplicate_Column_Update">
        <trim suffixOverrides=",">
            role_id = #{sysRoleDept.roleId,jdbcType=BIGINT},
            dept_id = #{sysRoleDept.deptId,jdbcType=BIGINT}
         </trim>
    </sql>

    <!--带有空值检查的插入更新-->
    <sql id="On_Duplicate_Column_Selective_Update">
        <trim suffixOverrides=",">
            <if test="sysRoleDept.roleId != null">
                role_id = #{sysRoleDept.roleId,jdbcType=BIGINT},
            </if>
            <if test="sysRoleDept.deptId != null">
                dept_id = #{sysRoleDept.deptId,jdbcType=BIGINT}
            </if>
        </trim>
    </sql>

    <!--批量插入更新-->
    <sql id="Batch_On_Duplicate_Column_Update">
        <trim suffixOverrides=",">
            role_id = values(role_id),
            dept_id = values(dept_id),
        </trim>
    </sql>

    <!--带有控制判断的批量插入更新-->
    <sql id="Batch_On_Duplicate_Column_Update_Selective">
        <trim suffixOverrides=",">
            <if test="sysRoleDept.roleId != null">
                role_id = #{item.roleId,jdbcType=BIGINT},
            </if>
            <if test="sysRoleDept.deptId != null">
                dept_id = #{item.deptId,jdbcType=BIGINT}
            </if>
        </trim>
    </sql>

    <!--批量插入，更新插入值-->
    <sql id="Batch_Operating_Value">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{item.roleId,jdbcType=BIGINT},
            #{item.deptId,jdbcType=BIGINT}
        </trim>
    </sql>

    <!--批量更新-->
    <sql id="Batch_Update">
        <set>
            role_id = #{item.roleId,jdbcType=BIGINT},
            dept_id = #{item.deptId,jdbcType=BIGINT}
        </set>
    </sql>

    <!--带有空值检查的批量更新-->
    <sql id="Batch_Update_selective">
        <set>
            <if test="item.roleId != null">
                role_id = #{item.roleId,jdbcType=BIGINT},
            </if>
            <if test="item.deptId != null">
                dept_id = #{item.deptId,jdbcType=BIGINT}
            </if>
        </set>
    </sql>

    <!--带有空值检查的批量操作字段-->
    <sql id="Batch_Operating_Selective_Column">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="item.roleId != null">
                role_id ,
            </if>
            <if test="item.deptId != null">
                dept_id 
            </if>
        </trim>
    </sql>

    <!--带有空值检查的批量操作值-->
    <sql id="Batch_Operating_Selective_Value">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="item.roleId != null">
                #{item.roleId,jdbcType=BIGINT},
            </if>
            <if test="item.deptId != null">
                #{item.deptId,jdbcType=BIGINT}
            </if>
        </trim>
    </sql>

    <!--插入-->
    <insert id="insert" parameterType="com.xiaodao.feign.system.entity.SysRoleDept">
        insert into sys_role_dept
        <include refid="Base_Insert_Column"/>
        values
        <include refid="Base_Insert_Value"/>
    </insert>

    <!--带有空值检查的插入-->
    <insert id="insertSelective" parameterType="com.xiaodao.feign.system.entity.SysRoleDept">
        insert into sys_role_dept
        <include refid="Base_Insert_Selective_Column"/>
        values
        <include refid="Base_Insert_Selective_Value"/>
    </insert>

    <!--更新-->
    <update id="updateByPrimaryKey" parameterType="com.xiaodao.feign.system.entity.SysRoleDept">
        update sys_role_dept
        <include refid="Base_Update"/>
        <where>
            role_id = #{sysRoleDept.roleId,jdbcType=BIGINT}
        </where>
    </update>

    <!--带有空值检查的更新-->
    <update id="updateSelectiveByPrimaryKey" parameterType="com.xiaodao.feign.system.entity.SysRoleDept">
        update sys_role_dept
        <include refid="Base_Update_Selective"/>
        <where>
            role_id = #{sysRoleDept.roleId,jdbcType=BIGINT}
         </where>
    </update>


    <!--更新插入-->
    <insert id="upsert" parameterType="com.xiaodao.feign.system.entity.SysRoleDept">
        insert into sys_role_dept
        <include refid="Base_Insert_Column"/>
        values
        <include refid="Base_Insert_Value"/>
        on duplicate Column update
        <include refid="On_Duplicate_Column_Update"/>
    </insert>


    <!--带有控制判断的更新插入-->
    <insert id="upsertSelective" parameterType="com.xiaodao.feign.system.entity.SysRoleDept">
        insert into sys_role_dept
        <include refid="Base_Insert_Selective_Column"/>
        values
        <include refid="Base_Insert_Selective_Value"/>
        on duplicate Column update
        <include refid="On_Duplicate_Column_Selective_Update"/>
    </insert>


    <!--批量插入-->
    <insert id="batchInsert" parameterType="java.util.List">
        insert into sys_role_dept
        <include refid="Base_Insert_Column"/>
        values
        <foreach collection="list" index="index" item="item" separator=",">
            <include refid="Batch_Operating_Value"/>
        </foreach>
    </insert>


    <!-- 批量更新-->
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            update sys_role_dept
            <include refid="Batch_Update"/>
            <where>
                <trim suffixOverrides=",">
                    role_id = #{item.roleId,jdbcType=BIGINT}
                </trim>
            </where>
        </foreach>
    </update>


    <!-- 批量更新插入-->
    <update id="batchUpsert" parameterType="java.util.List">
        insert into sys_role_dept
        <include refid="Base_Insert_Column"/>
        values
        <include refid="Batch_Operating_Value"/>
        on duplicate Column update
        <include refid="Batch_On_Duplicate_Column_Update"/>
    </update>


    <!-- 带有控制判断的批量更新-->
    <update id="batchUpdateSelective" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            update sys_role_dept
            <include refid="Batch_Update_selective"/>
            <where>
                <trim suffixOverrides=",">
                    role_id = #{item.roleId,jdbcType=BIGINT}
                </trim>
            </where>
        </foreach>
    </update>


    <!-- 带有空值判断的批量插入-->
    <insert id="batchInsertSelective" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            insert into sys_role_dept
            <include refid="Batch_Operating_Selective_Column"/>
            values
            <include refid="Batch_Operating_Selective_Value"/>
        </foreach>
    </insert>

    <!-- 带有空值判断的批量更新插入-->
    <update id="batchUpsertSelective" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            insert into sys_role_dept
            <include refid="Batch_Operating_Selective_Column"/>
            values
            <include refid="Batch_Operating_Selective_Value"/>
            on duplicate Column update
            <include refid="Batch_On_Duplicate_Column_Update_Selective"/>
        </foreach>
    </update>


    <!--通过主键批量查询-->
    <select id="queryBatchPrimaryKeys" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from sys_role_dept
        <where>
            role_id in
            <foreach collection="list" item="item" open="(" separator="," close=")">
                #{item }
            </foreach>
            <include refid="Order_By"></include>
            <include refid="Time_Limit"></include>
        </where>
    </select>

    <!--通过主键批量查询-->
    <select id="queryByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from sys_role_dept
        <where>
            role_id = #{roleId,jdbcType=BIGINT}
        </where>
    </select>

    <!--条件查询-->
    <select id="queryByCondition" resultMap="BaseResultMap" parameterType="com.xiaodao.feign.system.entity.SysRoleDept">
        select
        <include refid="Base_Column_List"/>
        from sys_role_dept
        <where>
            <include refid="Base_Query_Where"/>
            <include refid="Time_Limit"></include>
        </where>
        <include refid="Order_By"></include>
    </select>

    <!--查询一个-->
    <select id="queryOne" resultMap="BaseResultMap" parameterType="com.xiaodao.feign.system.entity.SysRoleDept">
        select
        <include refid="Base_Column_List"/>
        from sys_role_dept
        <where>
            <include refid="Base_Query_Where"/>
            <include refid="Time_Limit"></include>
        </where>
        <include refid="Order_By"></include>
        limit 1
    </select>


    <!--条件模糊查询-->
    <select id="queryByLikeCondition" resultMap="BaseResultMap" parameterType="com.xiaodao.feign.system.entity.SysRoleDept">
        select
        <include refid="Base_Column_List"/>
        from sys_role_dept
        <where>
            <include refid="Base_Query_Like_Where"/>
            <include refid="Time_Limit"></include>
        </where>
        <include refid="Order_By"></include>
        <include refid="Time_Limit"></include>
    </select>


    <!--模糊查询-->
    <select id="queryFuzzy" resultMap="BaseResultMap" parameterType="com.xiaodao.feign.system.entity.SysRoleDept">
        select
        <include refid="Base_Column_List"/>
        from sys_role_dept
        <where>
            <include refid="Base_Query_Like_Where"/>
            <include refid="Time_Limit"></include>
        </where>
        <include refid="Order_By"></include>
    </select>

    <!--条件查询数量-->
    <select id="queryCount" resultType="int" parameterType="com.xiaodao.feign.system.entity.SysRoleDept">
        select count(*) from sys_role_dept
        <where>
            <include refid="Base_Query_Where"/>
            <include refid="Time_Limit"></include>
        </where>
    </select>

    <!--条件删除-->
    <delete id="delete" parameterType="com.xiaodao.feign.system.entity.SysRoleDept">
        delete from sys_role_dept
        <where>
            <include refid="Base_Query_Where"/>
            <include refid="Time_Limit"></include>
        </where>
    </delete>

    <!--通过主键删除-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from sys_role_dept
        <where>
            <trim suffixOverrides=",">
                role_id = #{roleId,jdbcType=BIGINT}
            </trim>
            <include refid="Time_Limit"></include>
        </where>
    </delete>

    <!--通过主键批量删除-->
    <delete id="deleteBatchByPrimaryKeys" parameterType="java.lang.Long">
        delete from sys_role_dept
        <where>
            role_id in
            <foreach collection="list" item="item" open="(" separator="," close=")">
                #{item }
            </foreach>
        </where>
    </delete>

    <!--分组统计-->
    <select id="statisticsGroup" resultType="java.util.Map" parameterType="com.xiaodao.feign.system.entity.SysRoleDept">
        select ${sysRoleDept.statisticalProperty} as name,${sysRoleDept.statisticalMethod}(${sysRoleDept.statisticalProperty}) as value from sys_role_dept
        <where>
            <include refid="Base_Query_Where"/>
            <include refid="Time_Limit"></include>
        </where>
         group by ${sysRoleDept.statisticalProperty}
    </select>

    <!--按日统计-->
    <select id="statisticsGroupByDay" resultType="java.util.Map" parameterType="com.xiaodao.feign.system.entity.SysRoleDept">
        select date_format(create_time, '%Y-%m-%d') as name,${sysRoleDept.statisticalMethod}(${sysRoleDept.statisticalProperty}) as value from sys_role_dept
        <where>
            <include refid="Base_Query_Where"/>
            <include refid="Time_Limit"></include>
        </where>
        group by date_format(create_time,'%Y-%m-%d')
    </select>

    <!--按月统计-->
    <select id="statisticsGroupByMonth" resultType="java.util.Map" parameterType="com.xiaodao.feign.system.entity.SysRoleDept">
        select date_format(create_time, '%Y-%m') as name, ${sysRoleDept.statisticalMethod}(${sysRoleDept.statisticalProperty}) as value from sys_role_dept
        <where>
            <include refid="Base_Query_Where"/>
            <include refid="Time_Limit"/>
        </where>
            group by date_format(create_time,'%Y-%m')
    </select>

    <!--按年统计-->
    <select id="statisticsGroupByYear" resultType="java.util.Map" parameterType="com.xiaodao.feign.system.entity.SysRoleDept">
        select date_format(create_time, '%Y') as name,${sysRoleDept.statisticalMethod}(${sysRoleDept.statisticalProperty}) as value from sys_role_dept
        <where>
            <include refid="Base_Query_Where"/>
            <include refid="Time_Limit"/>
         </where>
            group by date_format(create_time,'%Y')
    </select>

</mapper>