<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${gentable.packageName}.${gentable.moduleName}.mapper.${gentable.className}Mapper">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="${gentable.packageName}.${gentable.moduleName}.entity.${gentable.className}" id="BaseResultMap">
    <#list gentable.columns as field>
        <result property="${field.javaFieldName}" column="${field.fieldName}"/>
    </#list>
    </resultMap>


    <!--数据库表的基本查询列名集合 -->
    <sql id="Base_Column_List">
        <#list gentable.columns as field>
        ${field.fieldName} <#if field_has_next>,</#if>
        </#list>
    </sql>


    <!--Where子句 -->
    <sql id="Base_Query_Where">
        <#list gentable.columns as field>
         <if test="${gentable.camelCaseclassName}.${field.javaFieldName} != null">
            and ${field.fieldName} = <#noparse>#{</#noparse>${gentable.camelCaseclassName}.${field.javaFieldName},jdbcType=${field.jdbcType}<#noparse>}</#noparse>
         </if>
        </#list>
    </sql>




    <!--基本更新字段-->
    <sql id="Base_Update_Column">
        <set>
        <#list gentable.columns as field>
          <if test="${gentable.camelCaseclassName}.${field.javaFieldName} != null">
             ${field.fieldName} = <#noparse>#{</#noparse>${gentable.camelCaseclassName}.${field.javaFieldName},jdbcType=${field.jdbcType}<#noparse>}</#noparse><#if field_has_next>,</#if>
          </if>
        </#list>
        </set>
    </sql>


    <sql id="Base_Insert_Selective">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <#list gentable.columns as field>
            <if test="${gentable.camelCaseclassName}.${field.javaFieldName} != null">
               ${field.fieldName}<#if field_has_next>,</#if>
            </if>
            </#list>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <#list gentable.columns as field>
             <if test="${gentable.camelCaseclassName}.${field.javaFieldName} != null">
             <#noparse>#{</#noparse>${gentable.camelCaseclassName}.${field.javaFieldName},jdbcType=${field.jdbcType}<#noparse>}</#noparse><#if field_has_next>,</#if>
             </if>
            </#list>
        </trim>
    </sql>



    <!--批量添加记录到数据库表中-->
    <insert id="batchInsert" parameterType="java.util.List">
        insert into ${gentable.tableName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <#list gentable.columns as field>
             ${field.fieldName}<#if field_has_next>,</#if>
            </#list>
        </trim>
        values
        <foreach collection="list" index="index" item="item" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <#list gentable.columns as field>
                <#noparse>#{item.</#noparse>${field.javaFieldName},jdbcType=${field.jdbcType}<#noparse>}</#noparse><#if field_has_next>,</#if>
                </#list>
            </trim>
        </foreach>
    </insert>



    <!-- 根据主键批量更新数据库表中的记录-->
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            update ${gentable.tableName}
            <set>
                <trim suffixOverrides=",">
                    <#list gentable.columns as field>
                    ${field.fieldName} = <#noparse>#{item.</#noparse>${field.javaFieldName},jdbcType=${field.jdbcType}<#noparse>}</#noparse><#if field_has_next>,</#if>
                    </#list>
                </trim>
            </set>
              where ${gentable.pkColumn.fieldName} = <#noparse>#{item.</#noparse>${gentable.pkColumn.javaFieldName},jdbcType=${gentable.pkColumn.jdbcType}<#noparse>}</#noparse>

        </foreach>
    </update>


    <!--存在即更新否则插入-->
    <update id="upsert" parameterType="${gentable.packageName}.entity.${gentable.className}">
        insert into ${gentable.tableName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <#list gentable.columns as field>
             ${field.fieldName} <#if field_has_next>,</#if>
            </#list>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <#list gentable.columns as field>
             <#noparse>#{</#noparse>${gentable.camelCaseclassName}.${field.javaFieldName},jdbcType=${field.jdbcType}<#noparse>}</#noparse><#if field_has_next>,</#if>
            </#list>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
         <#list gentable.columns as field>
          <#noparse>#{</#noparse>${gentable.camelCaseclassName}.${field.javaFieldName},jdbcType=${field.jdbcType}<#noparse>}</#noparse><#if field_has_next>,</#if>
         </#list>
        </trim>
    </update>


    <!--带有空值检查的存在即更新否则插入-->
    <update id="upsertSelective" parameterType="${gentable.packageName}.${gentable.moduleName}.entity.${gentable.className}">
        insert into ${gentable.tableName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <#list gentable.columns as field>
            <if test="${gentable.camelCaseclassName}.${field.javaFieldName} != null">
                ${field.fieldName}<#if field_has_next>,</#if>
            </if>
            </#list>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <#list gentable.columns as field>
            <if test="${gentable.camelCaseclassName}.${field.javaFieldName} !=null ">
                <#noparse>#{</#noparse>${gentable.camelCaseclassName}.${field.javaFieldName},jdbcType=${field.jdbcType}<#noparse>}</#noparse><#if field_has_next>,</#if>
            </if>
            </#list>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <#list gentable.columns as field>
            <if test="${gentable.camelCaseclassName}.${field.javaFieldName} !=null ">
             <#noparse>#{</#noparse>${field.javaFieldName},jdbcType=${field.jdbcType}<#noparse>}</#noparse><#if field_has_next>,</#if>
            </if>
            </#list>
        </trim>
    </update>

    <select id="query" resultMap="BaseResultMap" parameterType="${gentable.packageName}.${gentable.moduleName}.entity.${gentable.className}">
        select
        <include refid="Base_Column_List"/>
        from ${gentable.tableName}
        <where>
            <include refid="Base_Query_Where"></include>
        </where>
    </select>

    <select id="queryTotalCount" resultType="long">
        select count(*) from ${gentable.tableName}
    </select>




</mapper>