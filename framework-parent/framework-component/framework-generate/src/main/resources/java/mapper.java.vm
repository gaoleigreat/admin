package ${gentable.packageName}.mapper;

import java.util.List;
import com.baomidou.mybatisplus.core.mapper.BaseMapper;
import org.apache.ibatis.annotations.Param;
import ${gentable.packageName}.entity.${gentable.className};


/**
 * @description ${gentable.className}Mapper
 * @author${gentable.author}
 * @since jdk1.8
 */
public interface ${gentable.className}Mapper extends BaseMapper<${gentable.className}>{

    /**
    * 批量插入
    * @param list List<${gentable.className}
    * @return Integer
    */
    Integer batchInsert(List<${gentable.className}> list);

    /**
     * 批量更新
     * @param list List<${gentable.className}>
     * @return Integer
     */
    Integer batchUpdate(List<${gentable.className}> list);

    /**
     * 存在即更新
     * @param ${gentable.camelCaseclassName} ${gentable.className}
     * @return Integer
     */
    Integer upsert(@Param("${gentable.camelCaseclassName}") ${gentable.className} ${gentable.camelCaseclassName});

    /**
     * 存在即更新，可选择具体属性
     * @param ${gentable.camelCaseclassName} ${gentable.className}
     * @return Integer
     */
    Integer upsertSelective(@Param("${gentable.camelCaseclassName}") ${gentable.className} ${gentable.camelCaseclassName});

    /**
     * 条件查询
     * @param ${gentable.camelCaseclassName} ${gentable.className}
     * @return List<${gentable.className}>
    */
    List<${gentable.className}> query(@Param("${gentable.camelCaseclassName}") ${gentable.className} ${gentable.camelCaseclassName});

    /**
     * 查询总数
     * @return Integer
     */
    Long queryTotalCount();


}